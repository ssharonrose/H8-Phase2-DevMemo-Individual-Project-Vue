import{reactive as e,watch as t,defineComponent as i,useSlots as o,ref as n,onMounted as a,openBlock as l,createElementBlock as c,normalizeClass as r,unref as d,createCommentVNode as p,renderSlot as s}from"vue";var u=Object.freeze({__proto__:null});var g={library:"https://accounts.google.com/gsi/client",defaultButtonConfig:{theme:"outline",size:"large"},scopes:"email profile openid"};const f=e({clientId:null,popupType:"CODE",prompt:!1,autoLogin:!1,idConfiguration:null,buttonConfig:g.defaultButtonConfig,callback:()=>{},error:null}),b=e({apiLoaded:!1,apiLoadIntitited:!1}),w=e=>{try{const t=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),i=decodeURIComponent(atob(t).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""));return JSON.parse(i)}catch(e){throw"JWT provided is invalid"}},m=new Promise((e=>{const t="undefined"!=typeof window;if(!b.apiLoadIntitited&&t){const t=document.createElement("script");b.apiLoadIntitited=!0,t.addEventListener("load",(()=>{b.apiLoaded=!0,e(window.google)})),t.src=g.library,t.async=!0,t.defer=!0,document.head.appendChild(t)}})),y=e=>{b.apiLoadIntitited?b.apiLoaded?e(window.google):t((()=>b.apiLoaded),(t=>{t&&e(window.google)})):m.then((t=>{e(t)}))},I=(e,t,i,o)=>{if(!e.client_id)throw new Error("Prop client id required since plugin is not initialized with a client id");y((()=>{((e,t,i,o,n)=>{if(n){const t=e.callback;e.callback=e=>{e.credential?t&&t(e):n(e)}}window.google.accounts.id.initialize(e);const a=t.value;a&&!o&&window.google.accounts.id.renderButton(a,i)})(e,t,i.buttonConfig,o,i.error),i.prompt&&_({clientId:i.clientId,callback:i.callback,error:i.error,autoLogin:i.autoLogin})}))},h=e=>new Promise(((t,i)=>{y((o=>{if(!(e&&e.clientId||f.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");o.accounts.oauth2.initCodeClient({client_id:e&&e.clientId||f.clientId||"",scope:g.scopes,ux_mode:"popup",callback:e=>{e.code?t(e):i(e)},error_callback:e=>{i(e)}}).requestCode()}))})),k=e=>new Promise(((t,i)=>{y((o=>{if(!(e&&e.clientId||f.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");o.accounts.oauth2.initTokenClient({client_id:e&&e.clientId||f.clientId||"",scope:g.scopes,callback:e=>{e.access_token?t(e):i(e)},error_callback:e=>{i(e)}}).requestAccessToken()}))})),_=e=>{if(!e&&(e={}),!e.clientId&&!f.clientId)throw new Error("clientId is required");const t={};return e.clientId&&(t.client_id=e.clientId),!e.clientId&&f.clientId&&(t.client_id=f.clientId),e.context&&(t.context=e.context),null!=e.autoLogin&&(t.auto_select=e.autoLogin),null!=e.cancelOnTapOutside&&(t.cancel_on_tap_outside=e.cancelOnTapOutside),new Promise(((i,o)=>{t.callback=t=>{e&&e.callback&&e.callback(t),t.credential?i(t):o(t)},y((i=>{i.accounts.id.initialize(t),i.accounts.id.prompt((t=>{e&&e.onNotification&&e.onNotification(t),(e=>{const t=e.notification;let i="";t.isNotDisplayed()&&(i="suppressed_by_user"===t.getNotDisplayedReason()?"Prompt was suppressed by user'. Refer https://developers.google.com/identity/gsi/web/guides/features#exponential_cooldown for more info":`Prompt was not displayed, reason for not displaying: ${t.getNotDisplayedReason()}`),t.isSkippedMoment()&&(i=`Prompt was skipped, reason for skipping: ${t.getSkippedReason()}`),i.length&&(e.error?e.error(i):e.reject(i))})({notification:t,reject:o,error:e&&e.error})}))}))}))},C=()=>{y((e=>{e.accounts.id.disableAutoSelect()}))};var L=i({__name:"GoogleLogin",props:{clientId:{type:String,required:!1},prompt:{type:Boolean,required:!1,default:!1},autoLogin:{type:Boolean,required:!1,default:!1},popupType:{type:String,required:!1},idConfiguration:{type:Object,required:!1},buttonConfig:{type:Object,required:!1},callback:{type:Function,required:!1},error:{type:Function,required:!1}},setup(e){const t=e,i=!!o().default,u=((e,t)=>{const i={...e};for(const e in t)void 0!==t[e]&&null!==t[e]&&(i[e]=t[e]);return i})(f,t),g={client_id:u.clientId||null,auto_select:u.autoLogin||!1,callback:u.callback,...u.idConfiguration},w=n();return a((()=>{I(g,w,u,i),t.popupType&&!i&&console.warn("Option 'popupType' is ignored since a slot which act as a custom login button was not found!!!")})),(e,t)=>(l(),c("div",{class:r(["g-btn-wrapper",[!d(b).apiLoaded&&"api-loading"]]),onClick:t[0]||(t[0]=e=>d(i)&&void("TOKEN"===d(u).popupType?k({clientId:u.clientId}).then((e=>{u.callback&&u.callback(e)})).catch((e=>{u.error&&u.error(e)})):h({clientId:u.clientId}).then((e=>{u.callback&&u.callback(e)})).catch((e=>{u.error&&u.error(e)}))))},[d(i)?p("v-if",!0):(l(),c("span",{key:0,ref_key:"buttonRef",ref:w,class:"g-btn"},null,512)),s(e.$slots,"default")],2))}});!function(e,t){void 0===t&&(t={});var i=t.insertAt;if(e&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],n=document.createElement("style");n.type="text/css","top"===i&&o.firstChild?o.insertBefore(n,o.firstChild):o.appendChild(n),n.styleSheet?n.styleSheet.cssText=e:n.appendChild(document.createTextNode(e))}}("\n.g-btn-wrapper[data-v-5e610566] {\n  display: inline-block;\n}\n.g-btn-wrapper.api-loading[data-v-5e610566] {\n  opacity: 0.5;\n  pointer-events: none;\n}\n"),L.__scopeId="data-v-5e610566",L.__file="src/plugin/GoogleLogin.vue";var v={install:(e,t)=>{t&&(e=>{e.clientId&&(f.clientId=e.clientId),e.popupType&&(f.popupType=e.popupType),null!=e.prompt&&(f.prompt=e.prompt),null!=e.autoLogin&&(f.autoLogin=e.autoLogin),e.idConfiguration&&(f.idConfiguration=e.idConfiguration),e.buttonConfig&&(f.buttonConfig=e.buttonConfig),e.callback&&(f.callback=e.callback)})(t),m.then((()=>{if(t.clientId){const e={client_id:t.clientId,auto_select:!0===t.autoLogin,callback:t.callback,...t.idConfiguration};window.google.accounts.id.initialize(e),t.prompt&&window.google.accounts.id.prompt()}})),e.component("GoogleLogin",L)}};export{u as CallbackTypes,L as GoogleLogin,w as decodeCredential,v as default,h as googleAuthCodeLogin,C as googleLogout,_ as googleOneTap,y as googleSdkLoaded,k as googleTokenLogin};
